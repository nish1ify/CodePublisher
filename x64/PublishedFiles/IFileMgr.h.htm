<html><head><link rel="stylesheet" type = "text/css"  href="Publisher.css"/><script type="text/javascript" src = "jssPublisher.js"></script></head><body><pre><br><br><br><a href = "Convert.cpp.htm">Convert.cpp - </a><br><a href = "IFileMgr.h.htm">IFileMgr.h - </a><br><br><br>#pragma once<br>
/////////////////////////////////////////////////////////////////////<br>
// IFileMgr.h - interface for finding files matching specified     //<br>
//              patterns on a specified path                       //<br>
// ver 3.0                                                         //<br>
// Jim Fawcett, MidtermCodeSupplement, Spring 2016                 //<br>
/////////////////////////////////////////////////////////////////////<br>
<br>
#include &lt;string&gt;<br>
<br>
namespace FileManager<br>
{<br>
  struct IFileEventHandler<br>
  {<br>
    virtual void execute(const std::string& fileSpec) = 0;<br>
  };<br>
<br>
  struct IDirEventHandler<br>
  {<br>
    virtual void execute(const std::string& dirSpec) = 0;<br>
  };<br>
<br>
  struct IDoneEventHandler<br>
  {<br>
    virtual void execute(size_t numFilesProcessed) = 0;<br>
  };<br>
<br>
  struct IFileMgr<br>
  {<br>
    virtual ~IFileMgr() {}<br>
    virtual void addPattern(const std::string& patt) = 0;<br>
    virtual void search() = 0;<br>
    virtual void find(const std::string& path) = 0;<br>
    virtual void regForFiles(IFileEventHandler* pEventHandler) = 0;<br>
    virtual void regForDirs(IDirEventHandler* pEventHandler) = 0;<br>
    virtual void regForDone(IDoneEventHandler* pEventHandler) = 0;<br>
    static IFileMgr* getInstance();<br>
  };<br>
<br>
  struct FileMgrFactory<br>
  {<br>
    static IFileMgr* create(const std::string& path);<br>
  };<br>
}<br>
<//pre><//body><//html>