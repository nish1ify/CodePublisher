<html><head><head><body><pre><br><br><br><a href = "ActionsAndRules.h.htm">ActionsAndRules.h - ActionsAndRules.h.htm</a><br><a href = "ConfigureParser.h.htm">ConfigureParser.h - ConfigureParser.h.htm</a><br><a href = "Parser.h.htm">Parser.h - Parser.h.htm</a><br><br><br>/////////////////////////////////////////////////////////////////////<br>//  ActionsAndRules.cpp - implements new parsing rules and actions //<br>//  ver 3.3                                                        //<br>//  Language:      Visual C++ 2008, SP1                            //<br>//  Platform:      Dell Precision T7400, Vista Ultimate SP1        //<br>//  Application:   Prototype for CSE687 Pr1, Sp09                  //<br>//  Author:        Jim Fawcett, CST 4-187, Syracuse University     //<br>//                 (315) 443-3948, jfawcett@twcny.rr.com           //<br>/////////////////////////////////////////////////////////////////////<br><br>#include "ActionsAndRules.h"<br>#include "../Utilities/Utilities.h"<br><br>using namespace CodeAnalysis;<br><br>Repository* Repository::instance;<br><br>#ifdef TEST_ACTIONSANDRULES<br><br>#include &lt;iostream&gt;<br>#include "ActionsAndRules.h"<br>#include "Tokenizer.h"<br>#include "SemiExpression.h"<br><br>int main(int argc, char* argv[])<br>{ <button onclick = "myFunction1()">-</button><div id = "myDIV1"><br>  std::cout &lt;&lt; "\n  Testing ActionsAndRules class\n "<br>            &lt;&lt; std::string(30,'=') &lt;&lt; std::endl;<br><br>  try<br>  { <button onclick = "myFunction1()">-</button><div id = "myDIV1"><br>    Utilities::StringHelpers::Title(<br>      "Actions and Rules - these construction tests are no longer valid"<br>    );<br>    //PreprocStatement pps;<br>    //pps.addAction(&ppq);<br><br>    //FunctionDefinition fnd;<br>    //PrettyPrintToQ pprtQ(resultsQ);<br>    //fnd.addAction(&pprtQ);<br><br>    //Toker toker("../ActionsAndRules.h");<br>    //SemiExp se(&toker);<br>    //Parser parser(&se);<br>    //parser.addRule(&pps);<br>    //parser.addRule(&fnd);<br>    //while(se.get())<br>    //  parser.parse();<br>    //size_t len = resultsQ.size();<br>    //for(size_t i=0; i&lt;len; ++i)<br>    //{ <button onclick = "myFunction1()">-</button><div id = "myDIV1"><br>    //  std::cout &lt;&lt; "\n  " &lt;&lt; resultsQ.front().c_str();<br>    //  resultsQ.pop();<br>    //}</div><script>function myFunction1() {var x = document.getElementById('myDIV1');if (x.style.display == 'none') {x.style.display = 'block';this.value = "+";}else {x.style.display = 'none';this.value = "-";}}</script><br>    std::cout &lt;&lt; "\n\n";<br>  }</div><script>function myFunction2() {var x = document.getElementById('myDIV2');if (x.style.display == 'none') {x.style.display = 'block';this.value = "+";}else {x.style.display = 'none';this.value = "-";}}</script><br>  catch(std::exception& ex)<br>  { <button onclick = "myFunction3()">-</button><div id = "myDIV3"><br>    std::cout &lt;&lt; "\n\n  " &lt;&lt; ex.what() &lt;&lt; "\n\n";<br>  }</div><script>function myFunction3() {var x = document.getElementById('myDIV3');if (x.style.display == 'none') {x.style.display = 'block';this.value = "+";}else {x.style.display = 'none';this.value = "-";}}</script><br>}</div><script>function myFunction4() {var x = document.getElementById('myDIV4');if (x.style.display == 'none') {x.style.display = 'block';this.value = "+";}else {x.style.display = 'none';this.value = "-";}}</script><br>#endif<br></pre</body></html>